//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2032.
// 

using Microsoft.Sax.SaxPassportLib.SoapProxy;

namespace Microsoft.Sax.SaxPassportLib.CredentialService 
{
	using System.Diagnostics;
	using System.Xml.Serialization;
	using System;
	using System.Web.Services.Protocols;
	using System.ComponentModel;
	using System.Web.Services;
    
    
	/// <remarks/>
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Web.Services.WebServiceBindingAttribute(Name="CredentialServiceAPISoapServerSoap", Namespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1")]
	public class CredentialServiceApiSoapServer : ServiceApiSoapProxy 
	{
        
		/// <remarks/>
		public CredentialServiceApiSoapServer() 
		{
			this.Url = "https://bvtppsacredential.net.pp.test.microsoft.com/pp310/PPSACredentialWSDL.srf?" +
				"Handler=CredentialServiceAPI";
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
		[System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetPassportID", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		[return: System.Xml.Serialization.XmlElementAttribute("pPassIDOut")]
		public tagPASSID GetPassportID(tagPASSID PassIDIn) 
		{
			object[] results = this.Invoke("GetPassportID", new object[] {
																			 PassIDIn});
			return ((tagPASSID)(results[0]));
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginGetPassportID(tagPASSID PassIDIn, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("GetPassportID", new object[] {
																	  PassIDIn}, callback, asyncState);
		}
        
		/// <remarks/>
		public tagPASSID EndGetPassportID(System.IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((tagPASSID)(results[0]));
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
		[System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetCredentialInfo", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		[return: System.Xml.Serialization.XmlElementAttribute("pbstrcredXML")]
		public string GetCredentialInfo(tagPASSID PassIDIn, string bstrAttribList) 
		{
			object[] results = this.Invoke("GetCredentialInfo", new object[] {
																				 PassIDIn,
																				 bstrAttribList});
			return ((string)(results[0]));
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginGetCredentialInfo(tagPASSID PassIDIn, string bstrAttribList, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("GetCredentialInfo", new object[] {
																		  PassIDIn,
																		  bstrAttribList}, callback, asyncState);
		}
        
		/// <remarks/>
		public string EndGetCredentialInfo(System.IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((string)(results[0]));
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
		[System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("#AddCredential", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void AddCredential(string bstrNamespace, string bstrCredXML, ref string pbstrNetID) 
		{
			object[] results = this.Invoke("AddCredential", new object[] {
																			 bstrNamespace,
																			 bstrCredXML,
																			 pbstrNetID});
			pbstrNetID = ((string)(results[0]));
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginAddCredential(string bstrNamespace, string bstrCredXML, string pbstrNetID, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("AddCredential", new object[] {
																	  bstrNamespace,
																	  bstrCredXML,
																	  pbstrNetID}, callback, asyncState);
		}
        
		/// <remarks/>
		public void EndAddCredential(System.IAsyncResult asyncResult, out string pbstrNetID) 
		{
			object[] results = this.EndInvoke(asyncResult);
			pbstrNetID = ((string)(results[0]));
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
		[System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("#UpdateCredential", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void UpdateCredential(string bstrCredXML) 
		{
			this.Invoke("UpdateCredential", new object[] {
															 bstrCredXML});
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginUpdateCredential(string bstrCredXML, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("UpdateCredential", new object[] {
																		 bstrCredXML}, callback, asyncState);
		}
        
		/// <remarks/>
		public void EndUpdateCredential(System.IAsyncResult asyncResult) 
		{
			this.EndInvoke(asyncResult);
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
		[System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("#DeleteCredential", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void DeleteCredential(tagPASSID PassID) 
		{
			this.Invoke("DeleteCredential", new object[] {
															 PassID});
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginDeleteCredential(tagPASSID PassID, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("DeleteCredential", new object[] {
																		 PassID}, callback, asyncState);
		}
        
		/// <remarks/>
		public void EndDeleteCredential(System.IAsyncResult asyncResult) 
		{
			this.EndInvoke(asyncResult);
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
		[System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("#RenameCredential", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void RenameCredential(tagPASSID PassIDIn, string bstrnewCredName) 
		{
			this.Invoke("RenameCredential", new object[] {
															 PassIDIn,
															 bstrnewCredName});
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginRenameCredential(tagPASSID PassIDIn, string bstrnewCredName, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("RenameCredential", new object[] {
																		 PassIDIn,
																		 bstrnewCredName}, callback, asyncState);
		}
        
		/// <remarks/>
		public void EndRenameCredential(System.IAsyncResult asyncResult) 
		{
			this.EndInvoke(asyncResult);
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
		[System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("#UnblockCredential", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void UnblockCredential(tagPASSID PassID) 
		{
			this.Invoke("UnblockCredential", new object[] {
															  PassID});
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginUnblockCredential(tagPASSID PassID, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("UnblockCredential", new object[] {
																		  PassID}, callback, asyncState);
		}
        
		/// <remarks/>
		public void EndUnblockCredential(System.IAsyncResult asyncResult) 
		{
			this.EndInvoke(asyncResult);
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
		[System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("#BlockCredential", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void BlockCredential(tagPASSID PassID) 
		{
			this.Invoke("BlockCredential", new object[] {
															PassID});
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginBlockCredential(tagPASSID PassID, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("BlockCredential", new object[] {
																		PassID}, callback, asyncState);
		}
        
		/// <remarks/>
		public void EndBlockCredential(System.IAsyncResult asyncResult) 
		{
			this.EndInvoke(asyncResult);
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
		[System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("#EnumCredentialsByName", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		[return: System.Xml.Serialization.XmlElementAttribute("pbstrCredXML")]
		public string EnumCredentialsByName(string bstrCredName, string bstrAttribList) 
		{
			object[] results = this.Invoke("EnumCredentialsByName", new object[] {
																					 bstrCredName,
																					 bstrAttribList});
			return ((string)(results[0]));
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginEnumCredentialsByName(string bstrCredName, string bstrAttribList, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("EnumCredentialsByName", new object[] {
																			  bstrCredName,
																			  bstrAttribList}, callback, asyncState);
		}
        
		/// <remarks/>
		public string EndEnumCredentialsByName(System.IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((string)(results[0]));
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
		[System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("#EnumCredentialsByNetID", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		[return: System.Xml.Serialization.XmlElementAttribute("pbstrCredentialXML")]
		public string EnumCredentialsByNetID(string bstrNetID, string bstrAttribList) 
		{
			object[] results = this.Invoke("EnumCredentialsByNetID", new object[] {
																					  bstrNetID,
																					  bstrAttribList});
			return ((string)(results[0]));
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginEnumCredentialsByNetID(string bstrNetID, string bstrAttribList, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("EnumCredentialsByNetID", new object[] {
																			   bstrNetID,
																			   bstrAttribList}, callback, asyncState);
		}
        
		/// <remarks/>
		public string EndEnumCredentialsByNetID(System.IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((string)(results[0]));
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
		[System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("#EnumCredentialsByNamespace", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		[return: System.Xml.Serialization.XmlElementAttribute("pbstrCredListXML")]
		public string EnumCredentialsByNamespace(string bstrNamespace, string bstrStartingCredName, int NumCredsToReturn) 
		{
			object[] results = this.Invoke("EnumCredentialsByNamespace", new object[] {
																						  bstrNamespace,
																						  bstrStartingCredName,
																						  NumCredsToReturn});
			return ((string)(results[0]));
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginEnumCredentialsByNamespace(string bstrNamespace, string bstrStartingCredName, int NumCredsToReturn, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("EnumCredentialsByNamespace", new object[] {
																				   bstrNamespace,
																				   bstrStartingCredName,
																				   NumCredsToReturn}, callback, asyncState);
		}
        
		/// <remarks/>
		public string EndEnumCredentialsByNamespace(System.IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((string)(results[0]));
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
		[System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetCertificateAssociations", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		[return: System.Xml.Serialization.XmlElementAttribute("pbstrCertXML")]
		public string GetCertificateAssociations(string bstrNetID, string bstrSigninName) 
		{
			object[] results = this.Invoke("GetCertificateAssociations", new object[] {
																						  bstrNetID,
																						  bstrSigninName});
			return ((string)(results[0]));
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginGetCertificateAssociations(string bstrNetID, string bstrSigninName, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("GetCertificateAssociations", new object[] {
																				   bstrNetID,
																				   bstrSigninName}, callback, asyncState);
		}
        
		/// <remarks/>
		public string EndGetCertificateAssociations(System.IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((string)(results[0]));
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
		[System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("#DeleteCertificateAssociation", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void DeleteCertificateAssociation(string bstrNetID, string bstrSigninName, string bstrIssuer, string bstrSerialNumber, short sPurpose) 
		{
			this.Invoke("DeleteCertificateAssociation", new object[] {
																		 bstrNetID,
																		 bstrSigninName,
																		 bstrIssuer,
																		 bstrSerialNumber,
																		 sPurpose});
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginDeleteCertificateAssociation(string bstrNetID, string bstrSigninName, string bstrIssuer, string bstrSerialNumber, short sPurpose, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("DeleteCertificateAssociation", new object[] {
																					 bstrNetID,
																					 bstrSigninName,
																					 bstrIssuer,
																					 bstrSerialNumber,
																					 sPurpose}, callback, asyncState);
		}
        
		/// <remarks/>
		public void EndDeleteCertificateAssociation(System.IAsyncResult asyncResult) 
		{
			this.EndInvoke(asyncResult);
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
		[System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("#DeleteAllCertificateAssociations", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void DeleteAllCertificateAssociations(string bstrNetID, string bstrSigninName) 
		{
			this.Invoke("DeleteAllCertificateAssociations", new object[] {
																			 bstrNetID,
																			 bstrSigninName});
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginDeleteAllCertificateAssociations(string bstrNetID, string bstrSigninName, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("DeleteAllCertificateAssociations", new object[] {
																						 bstrNetID,
																						 bstrSigninName}, callback, asyncState);
		}
        
		/// <remarks/>
		public void EndDeleteAllCertificateAssociations(System.IAsyncResult asyncResult) 
		{
			this.EndInvoke(asyncResult);
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
		[System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetSigninNamesForNetIDs", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		[return: System.Xml.Serialization.XmlElementAttribute("pbstrCredXML")]
		public string GetSigninNamesForNetIDs(string bstrNetIDs) 
		{
			object[] results = this.Invoke("GetSigninNamesForNetIDs", new object[] {
																					   bstrNetIDs});
			return ((string)(results[0]));
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginGetSigninNamesForNetIDs(string bstrNetIDs, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("GetSigninNamesForNetIDs", new object[] {
																				bstrNetIDs}, callback, asyncState);
		}
        
		/// <remarks/>
		public string EndGetSigninNamesForNetIDs(System.IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((string)(results[0]));
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
		[System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("#ForceCredentialRename", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void ForceCredentialRename(tagPASSID PassID) 
		{
			this.Invoke("ForceCredentialRename", new object[] {
																  PassID});
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginForceCredentialRename(tagPASSID PassID, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("ForceCredentialRename", new object[] {
																			  PassID}, callback, asyncState);
		}
        
		/// <remarks/>
		public void EndForceCredentialRename(System.IAsyncResult asyncResult) 
		{
			this.EndInvoke(asyncResult);
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
		[System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetNetIDsForSigninNames", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		[return: System.Xml.Serialization.XmlElementAttribute("pbstrCredXML")]
		public string GetNetIDsForSigninNames(string bstrSigninNames) 
		{
			object[] results = this.Invoke("GetNetIDsForSigninNames", new object[] {
																					   bstrSigninNames});
			return ((string)(results[0]));
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginGetNetIDsForSigninNames(string bstrSigninNames, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("GetNetIDsForSigninNames", new object[] {
																				bstrSigninNames}, callback, asyncState);
		}
        
		/// <remarks/>
		public string EndGetNetIDsForSigninNames(System.IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((string)(results[0]));
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
		[System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("#QueryCredentialChanges", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		[return: System.Xml.Serialization.XmlElementAttribute("ChangesXml")]
		public string QueryCredentialChanges(string OptionsXml) 
		{
			object[] results = this.Invoke("QueryCredentialChanges", new object[] {
																					  OptionsXml});
			return ((string)(results[0]));
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginQueryCredentialChanges(string OptionsXml, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("QueryCredentialChanges", new object[] {
																			   OptionsXml}, callback, asyncState);
		}
        
		/// <remarks/>
		public string EndQueryCredentialChanges(System.IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((string)(results[0]));
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
		[System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("#SuggestAlternateMemberNames", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		[return: System.Xml.Serialization.XmlElementAttribute("Names")]
		public string SuggestAlternateMemberNames(string Namespace, string FirstName, string LastName, string RequestedName) 
		{
			object[] results = this.Invoke("SuggestAlternateMemberNames", new object[] {
																						   Namespace,
																						   FirstName,
																						   LastName,
																						   RequestedName});
			return ((string)(results[0]));
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginSuggestAlternateMemberNames(string Namespace, string FirstName, string LastName, string RequestedName, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("SuggestAlternateMemberNames", new object[] {
																					Namespace,
																					FirstName,
																					LastName,
																					RequestedName}, callback, asyncState);
		}
        
		/// <remarks/>
		public string EndSuggestAlternateMemberNames(System.IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((string)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
		[System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetSigninNamesAndCIDsForNetIDs", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		[return: System.Xml.Serialization.XmlElementAttribute("pbstrCredXML")]
		public string GetSigninNamesAndCIDsForNetIDs(string bstrNetIDs) 
		{
			object[] results = this.Invoke("GetSigninNamesAndCIDsForNetIDs", new object[] {
																							  bstrNetIDs});
			return ((string)(results[0]));
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginGetSigninNamesAndCIDsForNetIDs(string bstrNetIDs, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("GetSigninNamesAndCIDsForNetIDs", new object[] {bstrNetIDs}, callback, asyncState);
		}
        
		/// <remarks/>
		public string EndGetSigninNamesAndCIDsForNetIDs(System.IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((string)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
		[System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetNetIDsAndCIDsForSigninNames", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		[return: System.Xml.Serialization.XmlElementAttribute("pbstrCredXML")]
		public string GetNetIDsAndCIDsForSigninNames(string bstrSigninNames) 
		{
			object[] results = this.Invoke("GetNetIDsAndCIDsForSigninNames", new object[] {
																							  bstrSigninNames});
			return ((string)(results[0]));
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginGetNetIDsAndCIDsForSigninNames(string bstrSigninNames, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("GetNetIDsAndCIDsForSigninNames", new object[] {
																					   bstrSigninNames}, callback, asyncState);
		}
        
		/// <remarks/>
		public string EndGetNetIDsAndCIDsForSigninNames(System.IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((string)(results[0]));
		}

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#AddLinkAccounts", RequestNamespace = "http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", ResponseNamespace = "http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddLinkAccounts(string bstrLinkProofData, ref string pbstrLinkID)
        {
            object[] results = this.Invoke("AddLinkAccounts", new object[] {
                        bstrLinkProofData,
                        pbstrLinkID});
            pbstrLinkID = ((string)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#DeLinkAccounts", RequestNamespace = "http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", ResponseNamespace = "http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeLinkAccounts(string bstrSigninNames, string SLT)
        {
            this.Invoke("DeLinkAccounts", new object[] {
                        bstrSigninNames,
                        SLT});
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetLinkAccountMembers", RequestNamespace = "http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", ResponseNamespace = "http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("pbstrLinkCredXML")]
        public string GetLinkAccountMembers(string bstrLinkID)
        {
            object[] results = this.Invoke("GetLinkAccountMembers", new object[] {
                        bstrLinkID});
            return ((string)(results[0]));
        }
	}
    
	/// <remarks/>
	[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1")]
	[System.Xml.Serialization.XmlRootAttribute("WSSecurityHeader", Namespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", IsNullable=false)]
	public class tagWSSECURITYHEADER : System.Web.Services.Protocols.SoapHeader 
	{
        
		/// <remarks/>
		public EnumSHVersion version;
        
		/// <remarks/>
		public string wssecurity;
        
		/// <remarks/>
		public string authorization;
        
		/// <remarks/>
		public string sitetoken;
        
		/// <remarks/>
		public string ppSoapHeader25;
        
		/// <remarks/>
		public string auditInfo;
        
		/// <remarks/>
		public string @delegate;
        
		/// <remarks/>
		public string originator;
	}
    
	/// <remarks/>
	[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1")]
	public enum EnumSHVersion 
	{
        
		/// <remarks/>
		eshHeader30,
        
		/// <remarks/>
		eshHeader25,
        
		/// <remarks/>
		eshNone,
	}
    
	/// <remarks/>
   
    
	/// <remarks/>
	[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1")]
	[System.Xml.Serialization.XmlRootAttribute("PPSoapHeader", Namespace="http://schemas.microsoft.com/Passport/SoapServices/CredentialServiceAPI/V1", IsNullable=false)]
	public class PPSoapHeader_wrapper : System.Web.Services.Protocols.SoapHeader 
	{
        
		/// <remarks/>
		[System.Xml.Serialization.XmlTextAttribute()]
		public string[] Text;
	}
}
